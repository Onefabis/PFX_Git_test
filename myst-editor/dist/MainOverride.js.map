{"version":3,"file":"MainOverride.js","sources":["../src/pfx_override/js/MainOverride.js"],"sourcesContent":["import '../css/PFXStyleOverride.css';\r\n\r\nimport { setupGitPanel } from \"./gitDiffUI.js\";\r\nimport \"./leftPanelButtons.js\";\r\nimport \"./leftPanelFileTree.js\";\r\nimport \"./editorContextMenu.js\";\r\n\r\nimport * as txFormat from \"./textFormatButtons.js\";\r\nimport { openImagePicker } from \"./projectImagePicker.js\";\r\nimport { waitForEditorReady, saveCurrentEditorContent, bindFocusBlurHandlers, setLastSavedTimestamp } from \"./saveEditorText.js\"\r\n\r\nimport MystEditor, { defaultButtons, autosaveEnabled } from '../../MystEditor.jsx';\r\nimport { showLatestCommitDiff, revertFileChanges, pluginReady, pluginInstance } from \"../../extensions/markChangedLines.js\";\r\n\r\n\r\nexport let mystEditorInstance = null;\r\nconst editorPanel = document.getElementById('editor-panel');\r\n\r\nconst sidebar = document.getElementById('sidebar');\r\nconst resizer = document.getElementById('resizer');\r\n\r\n// Restore left panel width\r\nconst savedWidth = localStorage.getItem('sidebarWidth');\r\nif (savedWidth) {\r\n  sidebar.style.width = savedWidth + 'px';\r\n}\r\n\r\n// Resize left panel with file tree\r\nresizer.onmousedown = function (e) {\r\n  e.preventDefault();\r\n  const startX = e.clientX;\r\n  const startWidth = sidebar.offsetWidth;\r\n  document.onmousemove = function (e) {\r\n    const newWidth = startWidth + (e.clientX - startX);\r\n    if (newWidth >= 250 && newWidth <= 600) {\r\n      sidebar.style.width = newWidth + 'px';\r\n      localStorage.setItem('sidebarWidth', newWidth);\r\n    }\r\n  };\r\n  document.onmouseup = function () {\r\n    document.onmousemove = null;\r\n    document.onmouseup = null;\r\n  };\r\n};\r\n\r\n// Converts backslashes to forward slashes for consistency\r\nfunction normalizePath(path) {\r\n  return path.replace(/\\\\/g, '/');\r\n}\r\n\r\nexport async function loadFile(filename) {\r\n  const res = await fetch(`/api/file?path=${encodeURIComponent(normalizePath(filename))}`);\r\n  if (res.status === 404) {\r\n    console.warn('Last opened file not found.');\r\n    localStorage.removeItem('lastOpened');\r\n    return;\r\n  }\r\n\r\n  if (!res.ok) {\r\n    alert(`File loading error: ${res.statusText}`);\r\n    return;\r\n  }\r\n\r\n  const data = await res.json();\r\n  setLastSavedTimestamp(data.last_modified);\r\n  const old = document.getElementById(\"myst\");\r\n  const newContainer = document.createElement(\"div\");\r\n  newContainer.id = \"myst\";\r\n  newContainer.style.flexGrow = \"1\";\r\n  newContainer.style.border = \"1px solid #ccc\";\r\n  newContainer.style.marginBottom = \"0.5rem\";\r\n  newContainer.style.height = \"80vh\";\r\n  old.replaceWith(newContainer);\r\n  localStorage.setItem('currentPath', filename);\r\n  const sheet = new CSSStyleSheet();\r\n  const css = await (await fetch('../PFXStyleOverride.css')).text();\r\n  await sheet.replace(css);\r\n  document.adoptedStyleSheets = [...document.adoptedStyleSheets, sheet];\r\n\r\n  const title = filename.split('\\\\').pop().split('/').pop();\r\n  requestAnimationFrame(async() => {\r\n    mystEditorInstance = MystEditor({\r\n      templatelist: \"linkedtemplatelist.json\",\r\n      initialText: data.content,\r\n      title: title,\r\n      additionalStyles: sheet,\r\n      includeButtons: defaultButtons.concat([\r\n        { id: \"revert\", text: \"🧹 Revert\", visible: false, action: () => revertFileChanges(mystEditorInstance) },\r\n        { text: \"💾 Save\", visible: true, action: () => saveCurrentEditorContent(true) },\r\n        { text: \"🗃️ Image\", visible: true, action: () => openImagePicker() },\r\n        { text: \"Clear\", visible: true, action: () => txFormat.clearLineSymbols() },\r\n        { text: \"H1\", visible: true, action: () => txFormat.convertToH1() },\r\n        { text: \"H2\", visible: true, action: () => txFormat.convertToH2() },\r\n        { text: \"B\",  visible: true, action: () => txFormat.convertToBold() }\r\n      ]),\r\n      spellcheckOpts: false,\r\n      syncScroll: true,\r\n    }, newContainer);\r\n    const view = await waitForEditorReady();\r\n    bindFocusBlurHandlers(view);\r\n    // Wait for plugin to be ready before setting up mode subscription\r\n    await pluginReady;\r\n    // Always re-inject merge view when file loads for non-Gitdiff modes\r\n    if ([\"Both\", \"Source\", \"Inline\"].includes(mystEditorInstance.options.mode.v)) {\r\n      showLatestCommitDiff(mystEditorInstance);\r\n    }\r\n    window._mystEditor = mystEditorInstance;\r\n    // Set up mode change subscription with more robust handling\r\n    mystEditorInstance.options.mode.subscribe((newMode) => {\r\n      requestAnimationFrame(async () => {\r\n        if ([\"Both\", \"Source\", \"Inline\"].includes(newMode)) {\r\n          // Wait for the editor to be ready with the new mode\r\n          await new Promise(resolve => setTimeout(resolve, 150));\r\n          // Try multiple approaches to ensure merge injection works\r\n          if (pluginInstance) {\r\n            pluginInstance.handleModeChange(newMode, mystEditorInstance);\r\n          } else {\r\n            showLatestCommitDiff(mystEditorInstance);\r\n          }\r\n        } else if (newMode === \"Gitdiff\") {\r\n          // Clear merge view if plugin is available\r\n          if (pluginInstance) {\r\n            pluginInstance.clearMergeView(mystEditorInstance);\r\n          } else {\r\n            // Fallback: clear merge compartment directly\r\n            if (mystEditorInstance.editorView?.v) {\r\n              mystEditorInstance.editorView.v.dispatch({\r\n                effects: mergeCompartment.reconfigure([]),\r\n              });\r\n            }\r\n          }\r\n          setupGitPanel();\r\n        }\r\n      });\r\n    });\r\n  });\r\n\r\n  localStorage.setItem('lastOpened', filename);\r\n}\r\n\r\n// Insert image markdown into editor\r\nexport function insertImageMarkdown(path) {\r\n  const filename = path.split(\"/\").pop() || \"\";\r\n  const dotIndex = filename.lastIndexOf(\".\");\r\n  const altText = dotIndex > -1 ? filename.substring(0, dotIndex) : filename;\r\n  const imgSyntax = `![${altText}](/${path})`;\r\n  const view = mystEditorInstance?.editorView;\r\n  if (!view) {\r\n    alert(\"Editor is not ready yet.\");\r\n    return;\r\n  }\r\n  console.log(view);\r\n  const { state } = view.v;\r\n  const { from, to } = state.selection.main; // selection range\r\n   view.v.dispatch({\r\n    changes: { from, to, insert: imgSyntax },\r\n    selection: { anchor: from + imgSyntax.length } // cursor after insert\r\n  });\r\n\r\n  view.v.focus();\r\n}\r\n"],"names":["mystEditorInstance","document","getElementById","sidebar","resizer","savedWidth","localStorage","getItem","style","width","onmousedown","e","preventDefault","startX","clientX","startWidth","offsetWidth","onmousemove","newWidth","setItem","onmouseup","normalizePath","path","replace","loadFile","filename","res","fetch","encodeURIComponent","status","console","warn","removeItem","ok","alert","statusText","data","json","setLastSavedTimestamp","last_modified","old","newContainer","createElement","id","flexGrow","border","marginBottom","height","replaceWith","sheet","CSSStyleSheet","css","text","adoptedStyleSheets","title","split","pop","requestAnimationFrame","MystEditor","templatelist","initialText","content","additionalStyles","includeButtons","defaultButtons","concat","visible","action","revertFileChanges","saveCurrentEditorContent","openImagePicker","txFormat","spellcheckOpts","syncScroll","view","waitForEditorReady","bindFocusBlurHandlers","pluginReady","includes","options","mode","v","showLatestCommitDiff","window","_mystEditor","subscribe","newMode","Promise","resolve","setTimeout","pluginInstance","handleModeChange","clearMergeView","editorView","dispatch","effects","mergeCompartment","reconfigure","setupGitPanel","insertImageMarkdown","dotIndex","lastIndexOf","imgSyntax","substring","log","state","from","to","selection","main","changes","insert","anchor","length","focus"],"mappings":"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"}